import{_ as a}from"./20023-08-07-01-CdaFONno.js";import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,e as s,b as t,o as l}from"./app-Cfgedju3.js";const r="/assets/20023-08-07-02-BZUn327x.png",p={};function h(k,i){return l(),n("div",null,[i[0]||(i[0]=s('<h1 id="asp-net-core-6-自訂路由格式" tabindex="-1"><a class="header-anchor" href="#asp-net-core-6-自訂路由格式"><span><a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 6 自訂路由格式</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>本文說明如何設定 API 的網址大小寫，<br> 雖說網址大小寫對 SEO 基本沒影響，只要格式一致均可。<br> 不過如果有不喜歡大駝峰的命名規則有兩種做法</p><ul><li>在屬性路由或路由表手動命名，</li><li>透過選項調整路由命名的規則。</li></ul><p>本文將透過更改選項的方式來設定路由規則。</p>',5)),t(" more "),i[1]||(i[1]=s('<h2 id="路由慣例" tabindex="-1"><a class="header-anchor" href="#路由慣例"><span>路由慣例</span></a></h2><p>在 .NET 的預設慣例路由規則是 Controller 的名字。<br> 基於大駝峰的命名慣例會像這樣。</p><figure><img src="'+a+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="自訂路由" tabindex="-1"><a class="header-anchor" href="#自訂路由"><span>自訂路由</span></a></h2><p>建立一個 Web API 的專案範本直接作為範例，<br> 將路由選項依賴注入至應用程式即可。</p><p>在 <code>Program.cs</code> 內參考並加入下方片段</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cs"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> builder</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> WebApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CreateBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Add services to the container.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddControllers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddEndpointsApiExplorer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddSwaggerGen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 以下兩種寫法都可以</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 更新 AddRouting 的設定</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddRouting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">LowercaseUrls</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 直接使用 builder.Services.Configure&lt;RouteOptions&gt; 進行設定 RouteOptions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Configure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">RouteOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">LowercaseUrls</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> app</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="結果展示" tabindex="-1"><a class="header-anchor" href="#結果展示"><span>結果展示</span></a></h2><p>可以看到 Swagger API 文件上的網址變成小寫了</p><figure><img src="`+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="後記" tabindex="-1"><a class="header-anchor" href="#後記"><span>後記</span></a></h2><p>有時候覺得微軟官方的 MSDN 文件真的是需要一些悟性才會讀得懂......</p><h1 id="參考資料" tabindex="-1"><a class="header-anchor" href="#參考資料"><span>參考資料</span></a></h1><p><a href="https://learn.microsoft.com/zh-tw/aspnet/core/fundamentals/routing?view=aspnetcore-6.0" target="_blank" rel="noopener noreferrer">ASP.NET Core 中的路由</a><br><a href="https://learn.microsoft.com/zh-tw/aspnet/core/mvc/controllers/routing?view=aspnetcore-6.0" target="_blank" rel="noopener noreferrer">ASP.NET Core 中的路由至控制器動作</a><br><a href="https://learn.microsoft.com/zh-tw/dotnet/api/microsoft.aspnetcore.routing.routeoptions?view=aspnetcore-6.0" target="_blank" rel="noopener noreferrer">RouteOptions 類別</a></p>',14))])}const g=e(p,[["render",h]]),A=JSON.parse('{"path":"/posts/2023-08-07-asp-dot-net-core-6-web-api-route-custom/","title":"ASP.NET Core 6 自訂路由格式","lang":"zh-TW","frontmatter":{"title":"ASP.NET Core 6 自訂路由格式","date":"2023-08-07T00:00:00.000Z","category":"後端","tag":["ASP.NET Core","ASP.NET Core 6","API"],"description":"前言 本文說明如何設定 API 的網址大小寫， 雖說網址大小寫對 SEO 基本沒影響，只要格式一致均可。 不過如果有不喜歡大駝峰的命名規則有兩種做法 在屬性路由或路由表手動命名， 透過選項調整路由命名的規則。 本文將透過更改選項的方式來設定路由規則。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ASP.NET Core 6 自訂路由格式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-29T17:19:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Pamis Wang\\",\\"url\\":\\"https://pamis.dev\\",\\"email\\":\\"pamis.wang@gmail.com\\"}]}"],["meta",{"property":"og:url","content":"https://pamis.dev/posts/2023-08-07-asp-dot-net-core-6-web-api-route-custom/"}],["meta",{"property":"og:site_name","content":"Pamis Blog"}],["meta",{"property":"og:title","content":"ASP.NET Core 6 自訂路由格式"}],["meta",{"property":"og:description","content":"前言 本文說明如何設定 API 的網址大小寫， 雖說網址大小寫對 SEO 基本沒影響，只要格式一致均可。 不過如果有不喜歡大駝峰的命名規則有兩種做法 在屬性路由或路由表手動命名， 透過選項調整路由命名的規則。 本文將透過更改選項的方式來設定路由規則。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2024-04-29T17:19:49.000Z"}],["meta",{"property":"article:tag","content":"API"}],["meta",{"property":"article:tag","content":"ASP.NET Core 6"}],["meta",{"property":"article:tag","content":"ASP.NET Core"}],["meta",{"property":"article:published_time","content":"2023-08-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-29T17:19:49.000Z"}]]},"git":{"createdTime":1691408179000,"updatedTime":1714411189000,"contributors":[{"name":"EXMAIL\\\\pamis","username":"","email":"pamis@mail.tca.org.tw","commits":1},{"name":"pamis","username":"pamis","email":"pamis1116@gmail.com","commits":2,"url":"https://github.com/pamis"},{"name":"Pamis Wang","username":"","email":"pamis1116@gmail.com","commits":1}]},"readingTime":{"minutes":1.29,"words":388},"filePathRelative":"posts/2023-08-07-asp-dot-net-core-6-web-api-route-custom/index.md","excerpt":"\\n<h2>前言</h2>\\n<p>本文說明如何設定 API 的網址大小寫，<br>\\n雖說網址大小寫對 SEO 基本沒影響，只要格式一致均可。<br>\\n不過如果有不喜歡大駝峰的命名規則有兩種做法</p>\\n<ul>\\n<li>在屬性路由或路由表手動命名，</li>\\n<li>透過選項調整路由命名的規則。</li>\\n</ul>\\n<p>本文將透過更改選項的方式來設定路由規則。</p>\\n","autoDesc":true}');export{g as comp,A as data};
