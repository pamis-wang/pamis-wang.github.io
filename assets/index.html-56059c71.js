import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as r,c as l,d as c,a,b as e,e as s,f as d}from"./app-7608b894.js";const o="/assets/meme-01-8c8b8c38.jpg",p={},h=a("h1",{id:"git-filter-branch-清理指南",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#git-filter-branch-清理指南","aria-hidden":"true"},"#"),e(" Git Filter-Branch 清理指南")],-1),u=a("h2",{id:"前言",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),e(" 前言")],-1),m=a("p",null,"在開發過程中難免會犯錯，像是不小心推送了機密檔案、大型檔案，或是一些不該存在於版本控制中的檔案。",-1),b=a("p",null,"如果專案還很新，可以砍掉 .git 目錄，但過去的提交紀錄也都會不見。",-1),g=a("p",null,[e("這時候就需要用到 "),a("code",null,"git filter-branch"),e(" 來重寫 Git 歷史記錄。")],-1),v=d('<p>不論是故意還是不小心幹了壞事，</p><p>完美湮滅犯案過程才是專業！！</p><figure><img src="'+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>不過使用前請三思，因為這會改變歷史記錄，如果其他人已經基於該分支工作，會需要額外的協調處理。</p><h2 id="為什麼不能直接刪除檔案" tabindex="-1"><a class="header-anchor" href="#為什麼不能直接刪除檔案" aria-hidden="true">#</a> 為什麼不能直接刪除檔案？</h2><p>許多人可能會問：「為什麼不直接刪除檔案就好？」</p><p><strong>直接刪除 vs git filter-branch 的差別</strong>：</p><table><thead><tr><th>操作方式</th><th>檔案狀態</th><th>Git 歷史</th><th>倉庫大小</th><th>安全性</th></tr></thead><tbody><tr><td>直接刪除</td><td>目前版本消失</td><td><strong>歷史仍保留</strong></td><td><strong>不變</strong></td><td>❌ 敏感資料仍可存取</td></tr><tr><td>filter-branch</td><td>完全消失</td><td><strong>歷史重寫</strong></td><td><strong>減少</strong></td><td>✅ 完全移除</td></tr></tbody></table><p><strong>具體差異</strong>：</p><ol><li><strong>倉庫大小</strong>：直接刪除大檔案後，Git 歷史中仍保留所有版本，<code>.git</code> 資料夾大小不會減少</li><li><strong>安全考量</strong>：即使刪除了包含密碼或 API 金鑰的檔案，任何人都可以透過 <code>git log</code> 和 <code>git checkout</code> 存取舊版本</li><li><strong>合規需求</strong>：某些資料保護法規要求完全移除特定資料，單純刪除無法滿足要求</li><li><strong>專業形象</strong>：Git 歷史是專案的永久記錄，保持乾淨的歷史有助於維護專業形象</li></ol><p><strong>範例說明</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 假設你不小心推送了 secret.txt</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;password=123456&quot;</span> <span class="token operator">&gt;</span> secret.txt
<span class="token function">git</span> <span class="token function">add</span> secret.txt
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Add config&quot;</span>
<span class="token function">git</span> push

<span class="token comment"># 方案 1: 直接刪除（問題方案）</span>
<span class="token function">rm</span> secret.txt
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Remove secret file&quot;</span>
<span class="token comment"># 結果：檔案消失了，但任何人都可以用以下指令看到密碼</span>
<span class="token function">git</span> show HEAD~1:secret.txt  <span class="token comment"># 仍然會顯示 &quot;password=123456&quot;</span>

<span class="token comment"># 方案 2: 使用 filter-branch（正確方案）</span>
<span class="token function">git</span> filter-branch <span class="token parameter variable">--force</span> --index-filter <span class="token string">&#39;git rm --cached --ignore-unmatch secret.txt&#39;</span> HEAD
<span class="token comment"># 結果：檔案從歷史中完全消失，無法存取</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p><code>git filter-branch</code> 是一個強大的工具，用於重寫 Git 歷史記錄。<br> 當推送了不該存在的檔案時，可以使用此工具來清理特定分支的歷史。</p><h2 id="基本語法" tabindex="-1"><a class="header-anchor" href="#基本語法" aria-hidden="true">#</a> 基本語法</h2><h3 id="指定分支進行清理" tabindex="-1"><a class="header-anchor" href="#指定分支進行清理" aria-hidden="true">#</a> 指定分支進行清理</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> filter-branch <span class="token parameter variable">--force</span> --index-filter <span class="token string">&#39;git rm --cached --ignore-unmatch 檔案路徑&#39;</span> 分支名稱
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="清理單一檔案" tabindex="-1"><a class="header-anchor" href="#清理單一檔案" aria-hidden="true">#</a> 清理單一檔案</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> filter-branch <span class="token parameter variable">--force</span> --index-filter <span class="token string">&#39;git rm --cached --ignore-unmatch secret.txt&#39;</span> feature/my-branch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="清理整個資料夾" tabindex="-1"><a class="header-anchor" href="#清理整個資料夾" aria-hidden="true">#</a> 清理整個資料夾</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> filter-branch <span class="token parameter variable">--force</span> --index-filter <span class="token string">&#39;git rm -rf --cached --ignore-unmatch folder/&#39;</span> feature/my-branch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="清理多個檔案類型" tabindex="-1"><a class="header-anchor" href="#清理多個檔案類型" aria-hidden="true">#</a> 清理多個檔案類型</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> filter-branch <span class="token parameter variable">--force</span> --index-filter <span class="token string">&#39;git rm --cached --ignore-unmatch *.log *.tmp&#39;</span> feature/my-branch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="參數說明" tabindex="-1"><a class="header-anchor" href="#參數說明" aria-hidden="true">#</a> 參數說明</h2><ul><li><code>--force</code>: 強制執行，覆蓋之前的備份</li><li><code>--index-filter</code>: 在每個 commit 的索引上執行命令</li><li><code>--cached</code>: 只從索引中移除，不影響工作目錄</li><li><code>--ignore-unmatch</code>: 忽略檔案不存在的錯誤</li></ul><h2 id="完成後的操作" tabindex="-1"><a class="header-anchor" href="#完成後的操作" aria-hidden="true">#</a> 完成後的操作</h2><h3 id="強制推送到遠端" tabindex="-1"><a class="header-anchor" href="#強制推送到遠端" aria-hidden="true">#</a> 強制推送到遠端</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin 分支名稱 <span class="token parameter variable">--force</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="清理本地備份" tabindex="-1"><a class="header-anchor" href="#清理本地備份" aria-hidden="true">#</a> 清理本地備份</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> for-each-ref <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&quot;%(refname)&quot;</span> refs/original/ <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token function">git</span> update-ref <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="執行垃圾回收" tabindex="-1"><a class="header-anchor" href="#執行垃圾回收" aria-hidden="true">#</a> 執行垃圾回收</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> gc <span class="token parameter variable">--prune</span><span class="token operator">=</span>now
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="處理空-commit-問題" tabindex="-1"><a class="header-anchor" href="#處理空-commit-問題" aria-hidden="true">#</a> 處理空 Commit 問題</h2><p>使用 <code>filter-branch</code> 清理檔案後，某些 commit 可能變成空的（沒有實際變更）。</p><h3 id="問題現象" tabindex="-1"><a class="header-anchor" href="#問題現象" aria-hidden="true">#</a> 問題現象</h3><ul><li>Commit 有 message 但沒有檔案變更</li><li><code>git show --stat</code> 顯示無變更統計</li></ul><h3 id="解決方案" tabindex="-1"><a class="header-anchor" href="#解決方案" aria-hidden="true">#</a> 解決方案</h3><h4 id="方法-1-使用-interactive-rebase" tabindex="-1"><a class="header-anchor" href="#方法-1-使用-interactive-rebase" aria-hidden="true">#</a> 方法 1: 使用 Interactive Rebase</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> rebase <span class="token parameter variable">-i</span> HEAD~n  <span class="token comment"># n 是包含空 commit 的範圍</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在編輯器中：</p><ul><li>將空 commit 行改為 <code>drop</code></li><li>或直接刪除該行</li></ul><h4 id="方法-2-使用-reset-最新-commit" tabindex="-1"><a class="header-anchor" href="#方法-2-使用-reset-最新-commit" aria-hidden="true">#</a> 方法 2: 使用 Reset (最新 commit)</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD~1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="方法-3-在-sourcetree-中處理" tabindex="-1"><a class="header-anchor" href="#方法-3-在-sourcetree-中處理" aria-hidden="true">#</a> 方法 3: 在 SourceTree 中處理</h4><ol><li><p><strong>Interactive Rebase</strong>:</p><ul><li>右鍵點擊空 commit 上方的 commit</li><li>選擇「Rebase children of [commit] interactively...」</li><li>將空 commit 設為「drop」或刪除該行</li></ul></li><li><p><strong>Reset</strong>:</p><ul><li>右鍵點擊空 commit 的上一個 commit</li><li>選擇「Reset current branch to this commit」</li><li>選擇「Hard」模式</li></ul></li></ol><h2 id="注意事項" tabindex="-1"><a class="header-anchor" href="#注意事項" aria-hidden="true">#</a> 注意事項</h2><h3 id="⚠️-重要警告" tabindex="-1"><a class="header-anchor" href="#⚠️-重要警告" aria-hidden="true">#</a> ⚠️ 重要警告</h3><ul><li><code>filter-branch</code> 會重寫歷史記錄</li><li>如果其他人已經基於該分支工作，需要協調處理</li><li>建議在操作前創建備份分支</li></ul><h3 id="最佳實踐" tabindex="-1"><a class="header-anchor" href="#最佳實踐" aria-hidden="true">#</a> 最佳實踐</h3><ol><li><p><strong>操作前備份</strong>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> backup-branch
<span class="token function">git</span> checkout original-branch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>通知團隊成員</strong>:</p><ul><li>告知將要重寫歷史</li><li>確保沒有其他人正在該分支上工作</li></ul></li><li><p><strong>驗證結果</strong>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log <span class="token parameter variable">--oneline</span>
<span class="token function">git</span> show <span class="token parameter variable">--stat</span> HEAD~3  <span class="token comment"># 檢查幾個 commit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="範例場景" tabindex="-1"><a class="header-anchor" href="#範例場景" aria-hidden="true">#</a> 範例場景</h2><h3 id="場景-1-意外推送了機密檔案" tabindex="-1"><a class="header-anchor" href="#場景-1-意外推送了機密檔案" aria-hidden="true">#</a> 場景 1: 意外推送了機密檔案</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 清理 config/secrets.yml</span>
<span class="token function">git</span> filter-branch <span class="token parameter variable">--force</span> --index-filter <span class="token string">&#39;git rm --cached --ignore-unmatch config/secrets.yml&#39;</span> feature/user-auth

<span class="token comment"># 推送變更</span>
<span class="token function">git</span> push origin feature/user-auth <span class="token parameter variable">--force</span>

<span class="token comment"># 清理本地</span>
<span class="token function">git</span> for-each-ref <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&quot;%(refname)&quot;</span> refs/original/ <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token function">git</span> update-ref <span class="token parameter variable">-d</span>
<span class="token function">git</span> gc <span class="token parameter variable">--prune</span><span class="token operator">=</span>now
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="場景-2-清理整個-logs-資料夾" tabindex="-1"><a class="header-anchor" href="#場景-2-清理整個-logs-資料夾" aria-hidden="true">#</a> 場景 2: 清理整個 logs 資料夾</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 清理所有 log 檔案</span>
<span class="token function">git</span> filter-branch <span class="token parameter variable">--force</span> --index-filter <span class="token string">&#39;git rm -rf --cached --ignore-unmatch logs/&#39;</span> main

<span class="token comment"># 處理可能出現的空 commit</span>
<span class="token function">git</span> rebase <span class="token parameter variable">-i</span> HEAD~10  <span class="token comment"># 檢查最近 10 個 commit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="參考資料" tabindex="-1"><a class="header-anchor" href="#參考資料" aria-hidden="true">#</a> 參考資料</h2>`,56),f={href:"https://git-scm.com/docs/git-filter-branch",target:"_blank",rel:"noopener noreferrer"},k={href:"https://git-scm.com/book/zh-tw/v2/Git-%E5%B7%A5%E5%85%B7-%E9%87%8D%E5%AF%AB%E6%AD%B7%E5%8F%B2",target:"_blank",rel:"noopener noreferrer"};function x(_,E){const n=t("ExternalLinkIcon");return r(),l("div",null,[h,u,m,b,g,c(" more "),v,a("ul",null,[a("li",null,[a("a",f,[e("Git 官方文件 - git-filter-branch"),s(n)])]),a("li",null,[a("a",k,[e("Git 官方文件 - 重寫歷史"),s(n)])])])])}const y=i(p,[["render",x],["__file","index.html.vue"]]);export{y as default};
