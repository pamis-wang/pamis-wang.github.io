import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as i,b as t,e as l,f as a,o as p}from"./app-BnAZYMcT.js";const h="/assets/2023-07-19-01-CtCWuMHS.png",r="/assets/2023-07-19-02-CfykaIkB.png",d="/assets/meme-01-BJVB4Vnm.jpg",k="/assets/2023-07-19-03-CsWA0GL0.png",o="/assets/2023-07-19-04-DnnK44my.jpg",c="/assets/2023-07-19-05-CADVv4bX.jpg",g="/assets/2023-07-19-06-DtvGqghM.png",b="/assets/2023-07-19-07-C4Wo0ZyF.png",u="/assets/meme-02-BeSw5UNQ.jpg",m="/assets/2023-07-19-08-VQOYc9fg.png",y="/assets/2023-07-19-09-B6u7g8VW.png",A="/assets/2023-07-19-10-Dl85IqvJ.png",f="/assets/2023-07-19-11-Cxo3nJl4.png",v="/assets/meme-04-7kR3qQOr.jpg",B="/assets/ci-cd-devops-cycle-BzAaNJCp.png",F="/assets/meme-01-Bg9ZpIlK.jpg",E="/assets/meme-06-BEaqFcz5.jpg",C="/assets/2023-07-20-02-DIOeIelL.png",_="/assets/2023-07-20-03-DAyRvNF9.png",x="/assets/2023-07-20-04-mLbj81qT.png",G="/assets/2023-07-20-05-BQix9qYe.png",D="/assets/2023-07-23-01-Cm35khhS.png",V="/assets/2023-07-23-04-BaPmAZEg.png",w="/assets/2023-07-23-03-Br_aLZOe.png",z="/assets/2023-07-23-02-DMFCgkEk.png",H="/assets/2023-07-20-01-CySH_n9J.png",P={};function q(I,s){return p(),e("div",null,[s[0]||(s[0]=i("h1",{id:"使用-github-actions-發佈-vite-專案到另一個存放庫",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#使用-github-actions-發佈-vite-專案到另一個存放庫"},[i("span",null,"使用 GitHub Actions 發佈 Vite 專案到另一個存放庫")])],-1)),s[1]||(s[1]=i("h2",{id:"前言",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#前言"},[i("span",null,"前言")])],-1)),s[2]||(s[2]=i("p",null,[a("本篇文章會以發佈一個 Vite 專案為案例來介紹 GitHub Actions"),i("br"),a(" 目標是將一個 Vite 專案的原始碼放在私有的存放庫，"),i("br"),a(" 將打包後的靜態網站放在公開的存放庫。")],-1)),t(" more "),s[3]||(s[3]=l('<p>一般網路上的教學都是推送到同一個存放庫，<br> 使用手動或 GitHub Actions 另外開一個 gh-pages 分支，<br> 設定 Github Pages 抓取 gh-pages 分支來抓取靜態網站的內容。</p><p>但是當免費仔也是有代價的！<br> 如果要用 Github Pages 來發佈網站，<br> 要將整個存放庫公開或是掏出魔法小卡給微軟</p><figure><img src="'+h+'" alt="免費仔不公開就不能用" tabindex="0" loading="lazy"><figcaption>免費仔不公開就不能用</figcaption></figure><figure><img src="'+r+'" alt="微軟爸爸要錢的畫面" tabindex="0" loading="lazy"><figcaption>微軟爸爸要錢的畫面</figcaption></figure><p>要公開或是花錢二選一，那怎麼辦呢？<br> 小孩子才做選擇！我全都要！</p><figure><img src="'+d+'" alt="要公開或是花錢二選一，那怎麼辦呢？" tabindex="0" loading="lazy"><figcaption>要公開或是花錢二選一，那怎麼辦呢？</figcaption></figure><h2 id="事前準備" tabindex="-1"><a class="header-anchor" href="#事前準備"><span>事前準備</span></a></h2><h3 id="建立存放庫" tabindex="-1"><a class="header-anchor" href="#建立存放庫"><span>建立存放庫</span></a></h3><p>為了本次教學我們先在自己的 GitHub 建立兩個存放庫<br> 一個私有的放 Vite 專案原始碼<br> 一個公開的放 Vite 專案打包完畢的資料夾目錄</p><figure><img src="'+k+'" alt="建立兩個存放庫" tabindex="0" loading="lazy"><figcaption>建立兩個存放庫</figcaption></figure><h3 id="建立-vite-專案" tabindex="-1"><a class="header-anchor" href="#建立-vite-專案"><span>建立 Vite 專案</span></a></h3><p>建立 Vite 專案可以參考官方的教學文件</p><p><a href="https://vitejs.dev/guide/" target="_blank" rel="noopener noreferrer">Vite 官方專案建置教學</a></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vite@latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+o+'" alt="這邊選擇 Vue 專案為例" tabindex="0" loading="lazy"><figcaption>這邊選擇 Vue 專案為例</figcaption></figure><p>預覽專案</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>專案如果成功建置會出現這個範例畫面，<br> 咱們就直接拿初始專案來當範例 XD</p><figure><img src="'+c+'" alt="就直接用初始的樣子來做教學" tabindex="0" loading="lazy"><figcaption>就直接用初始的樣子來做教學</figcaption></figure><h3 id="路徑設定補充說明" tabindex="-1"><a class="header-anchor" href="#路徑設定補充說明"><span>路徑設定補充說明</span></a></h3><p>因為剛剛我們的測試專案的存放命名是 <code>vite-demo</code>，<br> 在 Github Pages 發佈的網址規則會是 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</code><br> 所以要在 Vite 專案設定基本路徑才能正確打包</p><figure><img src="'+g+'" alt="記得設定基本路徑" tabindex="0" loading="lazy"><figcaption>記得設定基本路徑</figcaption></figure><p>官方的路徑設定相關教學<br><a href="https://vitejs.dev/guide/static-deploy.html#github-pages" target="_blank" rel="noopener noreferrer">GitHub Pages base</a></p><h3 id="推送專案原始碼" tabindex="-1"><a class="header-anchor" href="#推送專案原始碼"><span>推送專案原始碼</span></a></h3><p>把原始碼專案推送到遠端存放庫，<br> 喜歡用 VSCode 的版本控制工具推送，<br> 還是喜歡硬派 CLI 下命令都可以。</p><figure><img src="'+b+'" alt="反正就是推送到遠端存放庫就對了" tabindex="0" loading="lazy"><figcaption>反正就是推送到遠端存放庫就對了</figcaption></figure><p>到這邊我們已經完成事前準備了<br> 接下來開始準備著手打包後的專案</p><h2 id="發佈網站" tabindex="-1"><a class="header-anchor" href="#發佈網站"><span>發佈網站</span></a></h2><h3 id="土法煉鋼" tabindex="-1"><a class="header-anchor" href="#土法煉鋼"><span>土法煉鋼</span></a></h3><p>為了避免淪於不求甚解而照抄指令，<br> 所以先不直接進入主題。</p><p>一開始先從使用土法煉鋼來達成我們期望的目標，<br> 期望對於之後整個工作流程指令撰寫更清晰。</p><figure><img src="'+u+'" alt="按部就班比較好啦～" tabindex="0" loading="lazy"><figcaption>按部就班比較好啦～</figcaption></figure><h3 id="建置專案" tabindex="-1"><a class="header-anchor" href="#建置專案"><span>建置專案</span></a></h3><p>如果要發佈打包後的專案，<br> 最簡單的做法就是在原本的專案下命令建置專案，<br> 然後把打包後的目錄推送到公開的存放庫。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>執行建置命令打包專案後會出現 <code>dist</code> 資料夾目錄</p><figure><img src="'+m+'" alt="左邊黃框的就是要被發佈的專案目錄" tabindex="0" loading="lazy"><figcaption>左邊黃框的就是要被發佈的專案目錄</figcaption></figure><p>官方的打包相關教學<br><a href="https://vitejs.dev/guide/static-deploy.html#building-the-app" target="_blank" rel="noopener noreferrer">GitHub Pages Building the App</a></p><h3 id="推送打包後的專案目錄" tabindex="-1"><a class="header-anchor" href="#推送打包後的專案目錄"><span>推送打包後的專案目錄</span></a></h3><p>直接將 <code>dist</code> 資料夾目錄推送到公開的存放庫，<br> 要用 GUI 介面或 CLI 介面都可以。</p><figure><img src="'+y+'" alt="把目錄推送上去就像這樣" tabindex="0" loading="lazy"><figcaption>把目錄推送上去就像這樣</figcaption></figure><h3 id="設定-github-pages-的對應分支" tabindex="-1"><a class="header-anchor" href="#設定-github-pages-的對應分支"><span>設定 Github Pages 的對應分支</span></a></h3><p>到發佈專案的存放庫設定 Github Pages<br> 點進綠框的 Pages 分頁<br> 在紅框的設定要抓取的分支後存檔<br> 稍待片刻就會看到黃框的超連結</p><figure><img src="'+A+'" alt="Github Pages 設定畫面" tabindex="0" loading="lazy"><figcaption>Github Pages 設定畫面</figcaption></figure><figure><img src="'+f+'" alt="成功了就會看到網站囉" tabindex="0" loading="lazy"><figcaption>成功了就會看到網站囉</figcaption></figure><h3 id="段落小結" tabindex="-1"><a class="header-anchor" href="#段落小結"><span>段落小結</span></a></h3><p>上面的步驟是手動的方式來部屬專案，<br> 每次改好網站都要重複上面的步驟，<br> 推送原始碼到遠端存放庫之後，<br> 還要記得把打包後的目錄推送到另一個存放庫<br> 久了還是很麻煩，甚至可能會忘記。</p><p>如果能把剛剛的土法煉鋼手工活自動執行，<br> 當原始碼更新完畢後自動打包專案並發佈在公開存放庫，<br> 那這樣就太好了。</p><figure><img src="'+v+'" alt="接下來就快要進入重點了" tabindex="0" loading="lazy"><figcaption>接下來就快要進入重點了</figcaption></figure><h2 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions"><span>GitHub Actions</span></a></h2><h3 id="ci-cd-與-devops" tabindex="-1"><a class="header-anchor" href="#ci-cd-與-devops"><span>CI/CD 與 DevOps</span></a></h3><p>要談到 GitHub Actions 之前要先簡單談談 CI/CD</p><p>當大家去 Google 關鍵字常常看到像這樣的圖</p><figure><img src="'+B+'" alt="取自網路(https://devopspage.com/what-is-ci-cd-in-devops-world/)" tabindex="0" loading="lazy"><figcaption>取自網路(<a href="https://devopspage.com/what-is-ci-cd-in-devops-world/" target="_blank" rel="noopener noreferrer">https://devopspage.com/what-is-ci-cd-in-devops-world/</a>)</figcaption></figure><p>其中以下 CI/CD 指的是以下兩點</p><ul><li>CI（Continuous Integration）持續整合</li><li>CD（Continuous Deployment）持續部署</li></ul><p>這是目前軟體開發領域的重要精神，<br> 將 「規劃、開發、建置、測試、發佈、運作、監控」這些頻繁且重複的工作用工具或服務來自動化。<br> 確保開發環境的一致性，也能減少測試的時間成本，進而提升軟體品質，<br> 通常會是由 <code>DevOps</code> 來負責建置這樣的開發環境。</p><figure><img src="'+F+'" alt="關於CI/CD有很多東西能講" tabindex="0" loading="lazy"><figcaption>關於CI/CD有很多東西能講</figcaption></figure><h3 id="基本介紹" tabindex="-1"><a class="header-anchor" href="#基本介紹"><span>基本介紹</span></a></h3><p>終於來到今天的重點了！！<br> 所以 GitHub Actions 是什麼呢？<br> 其實就是 Github 提供的 CI/CD 自動化服務，<br> 也就是把剛剛土法煉鋼的手動行為變自動執行，</p><p>這邊要強調的是 CI/CD 只是一個軟體開發觀念，<br> GitHub Actions 也只是其中一項工具，<br> 例如外面許多公司都會用 Jenkins 來做部屬，<br> 甚至即便寫 bash 腳本也是可行的一種方案(雖然就現在來看是滿辛苦的)。</p><figure><img src="'+E+'" alt="就是流程自動化啦～" tabindex="0" loading="lazy"><figcaption>就是流程自動化啦～</figcaption></figure><h3 id="官方文件" tabindex="-1"><a class="header-anchor" href="#官方文件"><span>官方文件</span></a></h3><p>要知道如何撰寫自動化腳本要先看看官方文件。</p><p><a href="https://docs.github.com/actions" target="_blank" rel="noopener noreferrer">GitHub Actions documentation</a></p><p>雖然右上角有中文翻譯，<br> 但我猜很多人不可能真的去看完(因為我也是 XD)，<br> 所以這邊直接講重點。</p><h3 id="如何建立" tabindex="-1"><a class="header-anchor" href="#如何建立"><span>如何建立</span></a></h3><p>這裡提供兩種方法，大家可以挑自己喜歡的方式。</p><h4 id="在-vscode-上建立" tabindex="-1"><a class="header-anchor" href="#在-vscode-上建立"><span>在 VSCode 上建立</span></a></h4><p>一種是從 VSCode 自己建立<br> 官方文件中的快速入門也是這個方法<br> 在專案目錄建立資料夾 <code>.github/workflows</code>，並建立一個副檔名為 <code>yml</code> 的檔案。<br> 本次範例我們就建立一個 <code>lgithub-actions-demo.ym</code></p><h4 id="在-github-上建立" tabindex="-1"><a class="header-anchor" href="#在-github-上建立"><span>在 GitHub 上建立</span></a></h4><p>在 GitHub 上也是可以直接編輯程式碼並送交，<br> 如果要在 GitHub 上建立自動化流程也是可行的做法，<br> 線上做的好處就是有一些範本可以直接拿來參考，<br> 這邊把圖文步驟放上來。</p><p>點擊紅框的選單<code>Actions</code> 的選單</p><figure><img src="'+C+'" alt="然後會看到下面的畫面" tabindex="0" loading="lazy"><figcaption>然後會看到下面的畫面</figcaption></figure><p>可以選下面的範本或是紅框處自己建立</p><figure><img src="'+_+'" alt="這邊先選自己建立的" tabindex="0" loading="lazy"><figcaption>這邊先選自己建立的</figcaption></figure><p>然後就會進入編輯畫面了，檔名可以自己定義。</p><p>右邊的 Marketplace 可以直接使用來簡化指令，<br> 主要是一些可重複使用的指令，例如簽出程式碼、發佈檔案到指定分支，<br> 透過一些參數設定可以更輕鬆完成自動化。<br> 關於可複用指令的官方介紹可以看 <a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsuses" target="_blank" rel="noopener noreferrer">jobs.&lt;job_id&gt;.steps[*].uses</a></p><figure><img src="'+x+'" alt="右邊的腳本範例可以直接使用來簡化指令" tabindex="0" loading="lazy"><figcaption>右邊的腳本範例可以直接使用來簡化指令</figcaption></figure><p>右邊還有一些片段的語法可以參考，但建議還是直接去官方文件看比較詳細。<br><a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions" target="_blank" rel="noopener noreferrer">官方語法文件</a></p><figure><img src="'+G+`" alt="鳩甘心欸～" tabindex="0" loading="lazy"><figcaption>鳩甘心欸～</figcaption></figure><h3 id="撰寫建議" tabindex="-1"><a class="header-anchor" href="#撰寫建議"><span>撰寫建議</span></a></h3><p>撰寫自動化指令的建議順序如下：</p><ol><li>使用<a href="https://github.com/actions" target="_blank" rel="noopener noreferrer">官方提供的指令</a>，點進去可以查看各個功能是否符合需求。</li><li>使用 <a href="https://github.com/marketplace?category=&amp;query=&amp;type=actions" target="_blank" rel="noopener noreferrer">Marketplace</a> 找別人寫好的。</li><li>參考各框架的官方文件的範例，例如 <a href="https://vitejs.dev/guide/static-deploy.html" target="_blank" rel="noopener noreferrer">Vite 的範例</a>。</li><li>真的都沒有才自己動手寫。</li></ol><h3 id="撰寫範例" tabindex="-1"><a class="header-anchor" href="#撰寫範例"><span>撰寫範例</span></a></h3><p>因為是 Vite 專案，所以參考官方的部屬範例，<br> 後面跨存放庫推送則是使用其他人的 Actions，<br> 相關的說明可以參考 <a href="https://github.com/cpina/github-action-push-to-another-repository" target="_blank" rel="noopener noreferrer">cpina/github-action-push-to-another-repository</a></p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yml"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># workflow 名稱</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Deploy Vite Project To Vite Page</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 設定觸發條件</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 當推送 main 分支</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 為了方便線上測試允許手動執行 workflow</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  workflow_dispatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改授予 GITHUB_TOKEN 的預設權限，根據需要新增或刪除訪問權限，以便只授予所需的最低訪問權限</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">permissions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  contents</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">write</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  pages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">write</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  id-token</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 設定同時併發的處理</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">concurrency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;pages&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  cancel-in-progress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 要執行的工作描述</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  deploy-vite-page</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Deploy To Vite Page</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 定義要運行作業的計算機類型。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    runs-on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 定義各項工作的步驟順序</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 簽出分支</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Checkout</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/checkout@v3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 下載與設定 Node.js</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Set up Node</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/setup-node@v3</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 指定下載的版本</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          node-version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">18</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 用於指定套件管理器在預設目錄中進行暫存</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;npm&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 透過 Node.js 安裝前端套件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">npm install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 建置專案</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Build</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">npm run build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 將建置目錄放置到另一個存儲庫</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Deploy To Other Oepository</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cpina/github-action-push-to-another-repository@main</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 公鑰變數名稱</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          SSH_DEPLOY_KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ secrets.DEPLOY_KEY }}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          source-directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;dist/&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 存放庫的使用者名稱</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          destination-github-username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;pamis-wang&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 存放庫的專案名稱</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          destination-repository-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vite-demo&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          user-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Example&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          user-email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;example@gmail.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          target-branch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 如果推送分支不存在就建立分支</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          create-target-branch-if-needed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="設定權限" tabindex="-1"><a class="header-anchor" href="#設定權限"><span>設定權限</span></a></h2><p>如果直接執行會出現以下錯誤<br> 因為沒有設定公鑰私鑰發生權限不足導致推送失敗</p><figure><img src="`+D+'" alt="逼逼！爆炸惹" tabindex="0" loading="lazy"><figcaption>逼逼！爆炸惹</figcaption></figure><h3 id="新增私鑰" tabindex="-1"><a class="header-anchor" href="#新增私鑰"><span>新增私鑰</span></a></h3><p>存放庫的設定選單，並在側邊選單選擇 <code>Secrets and variables</code> 內的 <code>Actions</code><br> 變數名稱要和上面工作流程的變數 <code>${{ secrets.DEPLOY_KEY }}</code> 相同，<br> 所以標題要命名為 <code>DEPLOY_KEY</code>。</p><figure><img src="'+V+'" alt="原始專案存放庫" tabindex="0" loading="lazy"><figcaption>原始專案存放庫</figcaption></figure><figure><img src="'+w+'" alt="打包後的靜態網站存放庫" tabindex="0" loading="lazy"><figcaption>打包後的靜態網站存放庫</figcaption></figure><h3 id="新增公鑰" tabindex="-1"><a class="header-anchor" href="#新增公鑰"><span>新增公鑰</span></a></h3><p>由於跨倉庫，所以要把公鑰貼在要部屬的存放庫，<br> 這樣才有推送到目的地存放庫的權限，<br> 存放庫的設定選單，並在側邊選單選擇 <code>Deploy keys</code><br> 標題一樣要命名為 <code>DEPLOY_KEY</code>。</p><figure><img src="'+z+'" alt="打包後的靜態網站存放庫" tabindex="0" loading="lazy"><figcaption>打包後的靜態網站存放庫</figcaption></figure><h3 id="使用限制" tabindex="-1"><a class="header-anchor" href="#使用限制"><span>使用限制</span></a></h3><p>免費仔還是有些限制的，<br> 公開專案不受限制，<br> 私有專案有每個月免費的時間額度，<br> 不過一般私人使用也用不太到這種用量。</p><figure><img src="'+H+'" alt="還是微軟爸爸要錢的畫面" tabindex="0" loading="lazy"><figcaption>還是微軟爸爸要錢的畫面</figcaption></figure>',100))])}const T=n(P,[["render",q]]),S=JSON.parse('{"path":"/posts/2023-07-19-deploy-vite-another-repository-using-github-actions/","title":"使用 GitHub Actions 發佈 Vite 專案到另一個存放庫","lang":"zh-TW","frontmatter":{"title":"使用 GitHub Actions 發佈 Vite 專案到另一個存放庫","date":"2023-07-19T00:00:00.000Z","category":"CI/CD","tag":["GitHub","GitHub Actions","Github Pages","CI/CD","DevOps"],"description":"透過發佈 Vite 專案為案例介紹 GitHub Actions","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 GitHub Actions 發佈 Vite 專案到另一個存放庫\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-30T14:40:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Pamis Wang\\",\\"url\\":\\"https://pamis.dev\\",\\"email\\":\\"pamis.wang@gmail.com\\"}]}"],["meta",{"property":"og:url","content":"https://pamis.dev/posts/2023-07-19-deploy-vite-another-repository-using-github-actions/"}],["meta",{"property":"og:site_name","content":"Pamis Blog"}],["meta",{"property":"og:title","content":"使用 GitHub Actions 發佈 Vite 專案到另一個存放庫"}],["meta",{"property":"og:description","content":"透過發佈 Vite 專案為案例介紹 GitHub Actions"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2024-12-30T14:40:20.000Z"}],["meta",{"property":"article:tag","content":"DevOps"}],["meta",{"property":"article:tag","content":"CI/CD"}],["meta",{"property":"article:tag","content":"Github Pages"}],["meta",{"property":"article:tag","content":"GitHub Actions"}],["meta",{"property":"article:tag","content":"GitHub"}],["meta",{"property":"article:published_time","content":"2023-07-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-30T14:40:20.000Z"}]]},"git":{"createdTime":1689701321000,"updatedTime":1735569620000,"contributors":[{"name":"pamis","username":"pamis","email":"pamis1116@gmail.com","commits":6,"url":"https://github.com/pamis"},{"name":"EXMAIL\\\\pamis","username":"","email":"pamis@mail.tca.org.tw","commits":1},{"name":"Pamis Wang","username":"","email":"pamis.wang@gmail.com","commits":1}]},"readingTime":{"minutes":9,"words":2699},"filePathRelative":"posts/2023-07-19-deploy-vite-another-repository-using-github-actions/index.md","excerpt":"\\n<h2>前言</h2>\\n<p>本篇文章會以發佈一個 Vite 專案為案例來介紹 GitHub Actions<br>\\n目標是將一個 Vite 專案的原始碼放在私有的存放庫，<br>\\n將打包後的靜態網站放在公開的存放庫。</p>\\n"}');export{T as comp,S as data};
