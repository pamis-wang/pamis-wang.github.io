import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,e as s,b as p,a as n,d as r,w as o,f as a,r as d,o as m}from"./app-DcPmYxSv.js";const h={};function g(u,e){const t=d("RouteLink");return m(),i("div",null,[e[5]||(e[5]=s('<h1 id="在-windows-建構-laravel-開發環境" tabindex="-1"><a class="header-anchor" href="#在-windows-建構-laravel-開發環境"><span>在 Windows 建構 Laravel 開發環境</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>基本上現在去看 Laravel 的官方文件<a href="https://laravel.com/docs/9.x/installation" target="_blank" rel="noopener noreferrer">Installation</a>，<br> 在建置開發環境的內容都是以容器化的方式為主。</p><p>原因很簡單，因為透過容器化的方式可以確保開發環境條件單一，<br> 比起在自己的系統逐一安裝伺服器、PHP、資料庫會有版本的差異，<br> 也可能還有其他的依賴套件要安裝與設定，<br> 為了寫個網站還要去掌握一堆知識技能點。<br> 結果環境裝起來一個禮拜就先過去了 XDDD。</p><p>(迷：但是用 Docker 也還是要具備不少知識儲備阿 XDDD)</p><p>不過這邊還是寫一下用 Windows 作業系統的情境來建置一個 Laravel 開發環境。</p><p>從頭自己建置一次開發環境，對於一個網站是如何運作會更有概念。</p><p>此說明將會於 D:\\ 建立一個 WNNMP 資料夾 作為範例說明，<br> 可根據實際需求解壓縮到任意目錄，並於後續設定做調整即可。</p>',8)),p(" more "),e[6]||(e[6]=n("h2",{id:"安裝-nginx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安裝-nginx"},[n("span",null,"安裝 Nginx")])],-1)),n("p",null,[r(t,{to:"/posts/2022-09-01-install-windows-nginx/"},{default:o(()=>e[0]||(e[0]=[a("在 Windows 安裝 Nginx 伺服器",-1)])),_:1,__:[0]})]),e[7]||(e[7]=n("h2",{id:"安裝-php",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安裝-php"},[n("span",null,"安裝 PHP")])],-1)),e[8]||(e[8]=n("p",null,[a("這邊要根據自己使用的框架版本來選擇 PHP 的對應版本，"),n("br"),a(" 版本對應列表可參照"),n("a",{href:"https://laravel.com/docs/10.x/releases",target:"_blank",rel:"noopener noreferrer"},"官方發行筆記"),a("。")],-1)),n("p",null,[r(t,{to:"/posts/2022-09-03-install-windows-php/"},{default:o(()=>e[1]||(e[1]=[a("在 Windows 安裝 PHP",-1)])),_:1,__:[1]})]),e[9]||(e[9]=s('<h2 id="安裝-coomposer" tabindex="-1"><a class="header-anchor" href="#安裝-coomposer"><span>安裝 coomposer</span></a></h2><p>在 Windows 安裝 PHP 方法很簡單，下載好 PHP</p><p><a href="https://getcomposer.org/" target="_blank" rel="noopener noreferrer">https://getcomposer.org/</a></p><h2 id="安裝-mariadb" tabindex="-1"><a class="header-anchor" href="#安裝-mariadb"><span>安裝 MariaDB</span></a></h2>',4)),n("p",null,[r(t,{to:"/posts/2022-09-02-install-windows-mariadb/"},{default:o(()=>e[2]||(e[2]=[a("install_windows_mariaDB",-1)])),_:1,__:[2]})]),e[10]||(e[10]=n("h2",{id:"安裝-runhiddenconsole",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安裝-runhiddenconsole"},[n("span",null,"安裝 RunHiddenConsole")])],-1)),n("p",null,[r(t,{to:"/posts/2022-09-05-install-windows-run-hidden-console/"},{default:o(()=>e[3]||(e[3]=[a("install_windows_run_hidden_console",-1)])),_:1,__:[3]})]),e[11]||(e[11]=n("h2",{id:"安裝-xdebug",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安裝-xdebug"},[n("span",null,"安裝 XDEBUG")])],-1)),n("p",null,[r(t,{to:"/posts/2022-09-04-install-windows-xdebug/"},{default:o(()=>e[4]||(e[4]=[a("install_windows_xdebug",-1)])),_:1,__:[4]})]),e[12]||(e[12]=n("h2",{id:"安裝-node-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安裝-node-js"},[n("span",null,"安裝 node.js")])],-1)),e[13]||(e[13]=n("p",null,[n("a",{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},"https://nodejs.org/en/")],-1))])}const c=l(h,[["render",g]]),f=JSON.parse('{"path":"/posts/2022-09-06-install-windows-laravel/","title":"在 Windows 建構 Laravel 開發環境","lang":"zh-TW","frontmatter":{"title":"在 Windows 建構 Laravel 開發環境","description":"在 Windows 建構 Laravel 開發環境","date":"2022-09-06T00:00:00.000Z","category":"開發環境","tag":["PHP","PHP 8","Windows"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在 Windows 建構 Laravel 開發環境\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-18T16:42:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Pamis Wang\\",\\"url\\":\\"https://pamis.dev\\",\\"email\\":\\"pamis.wang@gmail.com\\"}]}"],["meta",{"property":"og:url","content":"https://pamis.dev/posts/2022-09-06-install-windows-laravel/"}],["meta",{"property":"og:site_name","content":"Pamis Blog"}],["meta",{"property":"og:title","content":"在 Windows 建構 Laravel 開發環境"}],["meta",{"property":"og:description","content":"在 Windows 建構 Laravel 開發環境"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:updated_time","content":"2024-12-18T16:42:19.000Z"}],["meta",{"property":"article:tag","content":"Windows"}],["meta",{"property":"article:tag","content":"PHP 8"}],["meta",{"property":"article:tag","content":"PHP"}],["meta",{"property":"article:published_time","content":"2022-09-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-18T16:42:19.000Z"}]]},"git":{"createdTime":1689521396000,"updatedTime":1734540139000,"contributors":[{"name":"pamis","username":"pamis","email":"pamis1116@gmail.com","commits":4,"url":"https://github.com/pamis"},{"name":"Pamis Wang","username":"","email":"pamis1116@gmail.com","commits":2}]},"readingTime":{"minutes":1.46,"words":438},"filePathRelative":"posts/2022-09-06-install-windows-laravel/index.md","excerpt":"\\n<h2>前言</h2>\\n<p>基本上現在去看 Laravel 的官方文件<a href=\\"https://laravel.com/docs/9.x/installation\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Installation</a>，<br>\\n在建置開發環境的內容都是以容器化的方式為主。</p>\\n<p>原因很簡單，因為透過容器化的方式可以確保開發環境條件單一，<br>\\n比起在自己的系統逐一安裝伺服器、PHP、資料庫會有版本的差異，<br>\\n也可能還有其他的依賴套件要安裝與設定，<br>\\n為了寫個網站還要去掌握一堆知識技能點。<br>\\n結果環境裝起來一個禮拜就先過去了 XDDD。</p>\\n<p>(迷：但是用 Docker 也還是要具備不少知識儲備阿 XDDD)</p>\\n<p>不過這邊還是寫一下用 Windows 作業系統的情境來建置一個 Laravel 開發環境。</p>\\n<p>從頭自己建置一次開發環境，對於一個網站是如何運作會更有概念。</p>\\n<p>此說明將會於 D:\\\\ 建立一個 WNNMP 資料夾 作為範例說明，<br>\\n可根據實際需求解壓縮到任意目錄，並於後續設定做調整即可。</p>\\n"}');export{c as comp,f as data};
